################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Read the zproject/README.md for information about making permanent changes. #
################################################################################
from . import utils
from . import destructors
libzperfmq_destructors = destructors.lib

class ZperfNode(object):
    """

    """

    def __init__(self, nickname):
        """
        Create a new zperf_node.
        """
        p = utils.lib.zperf_node_new(utils.to_bytes(nickname))
        if p == utils.ffi.NULL:
            raise MemoryError("Could not allocate person")

        # ffi.gc returns a copy of the cdata object which will have the
        # destructor called when the Python object is GC'd:
        # https://cffi.readthedocs.org/en/latest/using.html#ffi-interface
        self._p = utils.ffi.gc(p, libzperfmq_destructors.zperf_node_destroy_py)

    def server(self, nickname):
        """
        Create a server in the node.
        """
        utils.lib.zperf_node_server(self._p, utils.to_bytes(nickname))

    @staticmethod
    def test(verbose):
        """
        Self test of this class.
        """
        utils.lib.zperf_node_test(verbose)

################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Read the zproject/README.md for information about making permanent changes. #
################################################################################
