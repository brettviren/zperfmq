<class
    name = "zperf_msg"
    title = "The Zperf Protocol"
    script = "zproto_codec_c"
    package_dir = "../include"
    header_ext = "hpp"
    source_ext = "cpp"
    >
  <include filename = "license.xml" />

  <grammar>
    hydra = hello *( socket | create | measure | heartbeat ) [ goodbye ]
    hello   = C:HELLO   ( S:HELLO-OK   / S:INVALID / S:FAILED )
    create  = C:CREATE  ( S:CREATE-OK  / S:INVALID / S:FAILED )
    socket  = C:SOCKET  ( S:SOCKET-OK  / S:INVALID / S:FAILED )
    measure = C:MEASURE ( S:RESULT     / S:INVALID / S:FAILED )
    heartbeat = C:PING S:PING-OK
    goodbye = C:GOODBYE ( S:GOODBYE-OK / S:INVALID / S:FAILED )
  </grammar>

  <message name = "HELLO">
    Create a perf on the server associated with the client.
    <field name = "nickname" type = "string">Client nickname</field>
  </message>

  <message name = "HELLO OK">
    Create a perf on the server associated with the client.
    <field name = "nickname" type = "string">Client nickname</field>
  </message>

  <message name = "CREATE">
    <field name = "mtype"    type = "string">Measurement type</field>
    <field name = "stype"    type = "string">Socket type</field>
  </message>

  <message name = "CREATE-OK">
    <field name = "mtype"    type = "string">Measurement type</field>
    <field name = "stype"    type = "string">Socket type</field>
    <field name = "ident"    type = "string">ID for the perf instance</field>
  </message>

  <message name = "SOCKET">
    Bind or connect the measurement socket to the address.
    <field name = "ident"    type = "string">ID for the perf instance</field>
    <field name = "action"   type = "string">Bind or Connect</field>
    <field name = "endpoint" type = "string">Address</field>
  </message>

  <message name = "SOCKET OK">
    Bind or connect the measurement socket to the address.
    <field name = "ident"    type = "string">ID for the perf instance</field>
    <field name = "action"   type = "string">Bind or Connect</field>
    <field name = "endpoint" type = "string">Address</field>
  </message>

  <message name = "MEASURE">
    Initiate a measurement.
    <field name = "ident"    type = "string">ID for the perf instance</field>
    <field name = "nmsgs" type = "number" size = "4">Number of messages</field>
    <field name = "msgsize" type = "number" size = "8">Message size in bytes</field>
    <field name = "timeout" type = "number" size = "4">Timeout in msec</field>
  </message>

  <message name = "RESULT">
    The results of a measurement.
    <field name = "ident"    type = "string">ID for the perf instance</field>
    <field name = "nmsgs" type = "number" size = "4">Number of messages</field>
    <field name = "msgsize" type = "number" size = "8">Message size in bytes</field>
    <field name = "timeout" type = "number" size = "4">Timeout in millisec</field>
    <field name = "time_us" type = "number" size = "8">Time elapsed in microseconds</field>
    <field name = "cpu_us" type = "number" size = "8">CPU time used (user+system) in microseconds</field>
    <field name = "noos" type = "number" size = "4">Number of out-of-order messages</field>
    <field name = "nbytes" type = "number" size = "8">Number of bytes processed</field>
  </message>

  <message name = "PING">
    Client pings the server. Server replies with PING-OK, or ERROR with status
    COMMAND-INVALID if the client is not recognized (e.g. after a server restart
    or network recovery).
  </message>

  <message name = "PING OK">
    Server replies to a client ping.
  </message>

  <message name = "GOODBYE">
    Close the connection politely
  </message>

  <message name = "GOODBYE OK">
    Handshake a connection close
  </message>

  <message name = "ERROR">
    Command failed for some specific reason
    <field name = "status" type = "number" size = "2">3-digit status code</field>
    <field name = "reason" type = "string">Printable explanation</field>
  </message>

  <!-- Success codes -->
  <define name = "SUCCESS" value = "200" />
  <define name = "STORED" value = "201" />
  <define name = "DELIVERED" value = "202" />

  <!-- Temporary errors -->
  <define name = "NOT DELIVERED" value = "300" />
  <define name = "CONTENT TOO LARGE" value = "301" />
  <define name = "TIMEOUT EXPIRED" value = "302" />
  <define name = "CONNECTION REFUSED" value = "303" />

  <!-- Application errors -->
  <define name = "RESOURCE LOCKED" value = "400" />
  <define name = "ACCESS REFUSED" value = "401" />
  <define name = "NOT FOUND" value = "404" />

  <!-- System errors -->
  <define name = "COMMAND INVALID" value = "500" />
  <define name = "NOT IMPLEMENTED" value = "501" />
  <define name = "INTERNAL ERROR" value = "502" />

</class>
