<class name = "zperf">
  API to the zperfmq perf actor.

  <constructor>
    Create a new zperf using the given socket type.
    <argument name="socket_type" type="integer" />
  </constructor>

  <destructor/>

  <method name = "bind">
    Bind the zperf measurement socket to an address.
    Return the qualified address or NULL on error.
    <argument name = "address" type="string">
      If the address is of type tcp:// it may use a wildcard for the
      port.
    </argument>
    <return type="string"/>
  </method>

  <method name = "connect">
    Connect the zperf measurement socket to a fully qualified address.
    Return code is zero on success.
    <argument name = "address" type="string"/>
    <return type="integer"/>
  </method>

  <method name = "measure">
    Perform a measurement atomically.  This is simply the combination
    of initialize() and finalize().
    <argument name= "name" type="string">
      The name of the measurement (ECHO, YODEL, SEND, RECV)
    </argument>
    <argument name= "nmsgs" type="integer">
      The number of messages to process
    </argument>
    <argument name= "msgsize" type="number" size="8">
      The size of messages to process
    </argument>
    <return type="number" size="8">
      The elapsed time in microseconds.
    </return>
  </method>    
  <method name = "initiate">
    Initiate a measurement.
    <argument name= "name" type="string">
      The name of the measurement (ECHO, YODEL, SEND, RECV)
    </argument>
    <argument name= "nmsgs" type="integer">
      The number of messages to process
    </argument>
    <argument name= "msgsize" type="number" size="8">
      The size of messages to process
    </argument>
  </method>    
  <method name = "finalize">
    Wait for the previously initiated a measurement.
    <return type="number" size="8">
      The elapsed time in microseconds.
    </return>
  </method>    

  <method name = "name">
    Return the name of the last measurement.
    <return type="string" />
  </method>
  
  <method name = "nmsgs">
    The requested number of message for last measurement.
    <return type="integer" />
  </method>

  <method name = "msgsize">
    The requested size of message for last measurement.
    <return type="number" size="8" />
  </method>

  <method name = "noos">
    Return the number of messages that were received out of sync
    during the previous yodel or recv measurements.  The measurement
    must be finalized.
    <return type="integer"/>
  </method>

  <method name = "bytes">
    Return the number of bytes transferred by the previous
    measurement.  The measurement must be finalized.
    <return type="number" size="8" />
  </method>

  <method name = "cpu">
    Return the CPU time (user+system) in microseconds used by the last
    measurement.  The measurement must be finalized.
    <return type="number" size="8" />
  </method>

  <method name = "time">
    Return the elapsed time in microseconds used by the last
    measurement.  The measurement must be finalized.
    <return type="number" size="8" />
  </method>

</class>
